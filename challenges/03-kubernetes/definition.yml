---
apiVersion: v1
kind: Service
  name: "redis"
  namespace: "bluecoding-company"
spec:
  ports:
  - port: 6379
    targetPort: 6379
    protocol: TCP
    name: http
  type: NodePort
  selector:
    app: "redis"

---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: redis
  namespace: "bluecoding-company"
  labels:
    app: redis
spec:
  replicas: 2
  selector:
    matchLabels:
      app: redis
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - image: redis:buster
        name: redis
        ports:
        - containerPort: 6379
        imagePullPolicy: Always

---
apiVersion: v1
kind: Service
  name: "nginx-ui"
  namespace: "bluecoding-company"
spec:
  ports:
  - port:  
    targetPort: 6379
    protocol: TCP
    name: http
  type: NodePort
  selector:
    app: "nginx-ui"

---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: nginx-ui
  labels:
    app: nginx-ui
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx-ui
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - image: nginx:alpine
        name: nginx-ui
        ports:
        - containerPort: 6379
        imagePullPolicy: Always

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: web
  namespace: "bluecoding-company"
spec:
  serviceName: "nginx"
  replicas: 2
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: k8s.gcr.io/nginx-slim:0.8
        ports:
        - containerPort: 80
          name: web
        volumeMounts:
        - name: www
          mountPath: /usr/share/nginx/html
  volumeClaimTemplates:
  - metadata:
      name: www
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi

